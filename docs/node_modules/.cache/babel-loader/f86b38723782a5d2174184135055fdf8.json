{"ast":null,"code":"var _jsxFileName = \"/Users/chocolababy/Desktop/react-todo/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport ToDoListItem from './ToDoListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: JSON.parse(localStorage.getItem(\"todo\")) || []\n    };\n    this.state = {\n      todo: []\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  // データ保存\n  handleAdd(e) {\n    e.preventDefault(); // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\n\n    this.state.todo.push({\n      title: e.target.title.value,\n      description: e.target.description.value\n    }); // setStateを使ってstateを上書き\n\n    this.setState({\n      todo: this.state.todo\n    }, () => {\n      // localStorageにtodoList stateを保存\n      localStorage.setItem(\"todo\", JSON.stringify(this.state.todo)); // callBack関数が引数に渡されていた場合に実行\n    }); // inputのvalueを空に\n\n    e.target.title.value = '';\n    e.target.description.value = '';\n  } // データ削除\n\n\n  handleRemove(i) {\n    // todo配列からi番目から1つ目のデータを除外\n    this.state.todo.splice(i, 1); // setStateでtodo配列を上書き\n\n    this.setState({\n      todo: this.state.todo\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TO DO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todos: this.state.todo,\n        handleRemove: this.handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/chocolababy/Desktop/react-todo/src/components/App.js"],"names":["React","Component","Form","ToDoListItem","App","constructor","props","state","todo","JSON","parse","localStorage","getItem","handleAdd","bind","handleRemove","e","preventDefault","push","title","target","value","description","setState","setItem","stringify","i","splice","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SASnBC,KATmB,GASX;AACNC,MAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C;AAD5C,KATW;AAEjB,SAAKL,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKK,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAMD;AACAD,EAAAA,SAAS,CAACG,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF,GADW,CAEX;;AACA,SAAKV,KAAL,CAAWC,IAAX,CAAgBU,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD,KAAT,CAAeE,KAAxB;AAA+BC,MAAAA,WAAW,EAAEN,CAAC,CAACI,MAAF,CAASE,WAAT,CAAqBD;AAAjE,KAArB,EAHW,CAIX;;AACA,SAAKE,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,KAAd,EACE,MAAM;AACJ;AACAG,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAe,KAAKlB,KAAL,CAAWC,IAA1B,CAA7B,EAFI,CAGJ;AAED,KANH,EALW,CAYX;;AACAQ,IAAAA,CAAC,CAACI,MAAF,CAASD,KAAT,CAAeE,KAAf,GAAuB,EAAvB;AACAL,IAAAA,CAAC,CAACI,MAAF,CAASE,WAAT,CAAqBD,KAArB,GAA6B,EAA7B;AACD,GA9BwC,CAgCzC;;;AACAN,EAAAA,YAAY,CAACW,CAAD,EAAI;AACd;AACA,SAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,MAAhB,CAAuBD,CAAvB,EAA0B,CAA1B,EAFc,CAGd;;AACA,SAAKH,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,KAAd;AACD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,IAAxB;AAA8B,QAAA,YAAY,EAAE,KAAKO;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA/CwC","sourcesContent":["import React, { Component } from 'react'\nimport Form from './Form'\nimport ToDoListItem from './ToDoListItem'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todo: []\n    }\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  state = {\n    todo: JSON.parse(localStorage.getItem(\"todo\")) || []\n  }\n\n  // データ保存\n  handleAdd(e) {\n    e.preventDefault()\n    // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\n    this.state.todo.push({ title: e.target.title.value, description: e.target.description.value })\n    // setStateを使ってstateを上書き\n    this.setState({ todo: this.state.todo },\n      () => {\n        // localStorageにtodoList stateを保存\n        localStorage.setItem(\"todo\", JSON.stringify(this.state.todo))\n        // callBack関数が引数に渡されていた場合に実行\n\n      })\n    // inputのvalueを空に\n    e.target.title.value = ''\n    e.target.description.value = ''\n  }\n\n  // データ削除\n  handleRemove(i) {\n    // todo配列からi番目から1つ目のデータを除外\n    this.state.todo.splice(i, 1)\n    // setStateでtodo配列を上書き\n    this.setState({ todo: this.state.todo })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>TO DO LIST</h1>\n        <List todos={this.state.todo} handleRemove={this.handleRemove} />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}