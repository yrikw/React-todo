{"ast":null,"code":"var _jsxFileName = \"/Users/chocolababy/Desktop/react-todo/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setEditing(true),\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todo, \"sXN9PY+tFVl0ATWUxw1/pO5209c=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/chocolababy/Desktop/react-todo/src/components/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","newName","setNewName","editingTemplate","id","name","handleChange","viewTemplate","completed","toggleTaskCompleted","deleteTask","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Todo(props) {\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState('');\n\n    const editingTemplate = (\n        <form className=\"stack-small\">\n            <div className=\"form-group\">\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    New name for {props.name}\n                </label>\n                <input id={props.id} className=\"todo-text\" type=\"text\" onChange={handleChange} />\n            </div>\n            <div className=\"btn-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn todo-cancel\"\n                    onClick={() => setEditing(false)}>\n                    Cancel\n                 <span className=\"visually-hidden\">renaming {props.name}</span>\n                </button>\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                    Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n                </button>\n            </div>\n        </form>\n    );\n\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <input\n                    id={props.id}\n                    type=\"checkbox\"\n                    defaultChecked={props.completed}\n                    onChange={() => props.toggleTaskCompleted(props.id)}\n                />\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    {props.name}\n                </label>\n            </div>\n            <div className=\"btn-group\">\n                <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n                    Edit <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn__danger\"\n                    onClick={() => props.deleteTask(props.id)}\n                >\n                    Delete <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n            </div>\n        </div>\n    );\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}"]},"metadata":{},"sourceType":"module"}