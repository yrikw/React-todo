{"ast":null,"code":"var _jsxFileName = \"/Users/chocolababy/Desktop/react-todo/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usePrevious(value) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s2();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this));\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      tabIndex: \"-1\",\n      ref: listHeadingRef,\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"sJ5StoDa9LQBUOAlB3vBADyG2hM=\", false, function () {\n  return [usePrevious];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/chocolababy/Desktop/react-todo/src/App.js"],"names":["React","useState","useRef","useEffect","Form","FilterButton","Todo","nanoid","usePrevious","value","ref","current","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTaskList","name","taskList","filterList","addTask","newTask","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName }\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}