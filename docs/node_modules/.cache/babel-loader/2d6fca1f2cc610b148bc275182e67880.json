{"ast":null,"code":"var _jsxFileName = \"/Users/chocolababy/Desktop/React-todo/src/components/Todo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usePrevious(value) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport default function Todo(props) {\n  _s2();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newName.trim()) {\n      return;\n    }\n\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        value: newName || props.name,\n        onChange: handleChange,\n        ref: editFieldRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"checkbox\",\n          id: props.id,\n          type: \"checkbox\",\n          defaultChecked: props.completed,\n          onChange: () => props.toggleTaskCompleted(props.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todo-label\",\n          htmlFor: props.id,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/edit.png`,\n          className: \"icon\",\n          onClick: () => setEditing(true),\n          ref: editButtonRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/delete.png`,\n          className: \"icon\",\n          alt: \"Logo\",\n          onClick: () => props.deleteTask(props.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(Todo, \"wty2LFvLjeZJqAVTSFbOh/PAiDA=\", false, function () {\n  return [usePrevious];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/chocolababy/Desktop/React-todo/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","usePrevious","value","ref","current","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","handleChange","e","target","handleSubmit","preventDefault","trim","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","process","env","PUBLIC_URL","deleteTask","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport default function Todo(props) {\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState('');\n\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    const wasEditing = usePrevious(isEditing);\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!newName.trim()) {\n            return;\n        }\n        props.editTask(props.id, newName);\n        setNewName(\"\");\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    New name for {props.name}\n                </label>\n                <input\n                    id={props.id}\n                    className=\"todo-text\"\n                    type=\"text\"\n                    value={newName || props.name}\n                    onChange={handleChange}\n                    ref={editFieldRef}\n                />\n            </div>\n            <div className=\"btn-group\">\n\n\n                <button\n                    type=\"button\"\n                    className=\"btn todo-cancel\"\n                    onClick={() => setEditing(false)}\n                >\n                    Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n                </button>\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                    Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n                </button>\n            </div>\n        </form>\n    );\n\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <div className=\"list-group\">\n                    <input\n                        id=\"checkbox\"\n                        id={props.id}\n                        type=\"checkbox\"\n                        defaultChecked={props.completed}\n                        onChange={() => props.toggleTaskCompleted(props.id)}\n                    />\n                    <label className=\"todo-label\" htmlFor={props.id}>\n                        {props.name}\n                    </label>\n                </div>\n\n\n                <div className=\"icon-group\">\n                    <img src={`${process.env.PUBLIC_URL}/edit.png`} className=\"icon\" onClick={() => setEditing(true)}\n                        ref={editButtonRef} />\n                    <img src={`${process.env.PUBLIC_URL}/delete.png`} className=\"icon\" alt=\"Logo\" onClick={() => props.deleteTask(props.id)} />\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n\n\n    useEffect(() => {\n        if (!wasEditing && isEditing) {\n            editFieldRef.current.focus();\n        }\n        if (wasEditing && !isEditing) {\n            editButtonRef.current.focus();\n        }\n    }, [wasEditing, isEditing]);\n\n\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}"]},"metadata":{},"sourceType":"module"}