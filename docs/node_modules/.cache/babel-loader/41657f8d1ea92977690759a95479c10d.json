{"ast":null,"code":"var _jsxFileName = \"/Users/chocolababy/Desktop/react-todo/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: JSON.parse(localStorage.getItem(\"todoList\")) || []\n    };\n\n    this.addTodo = (item, callBack) => {\n      // todoList stateに追加\n      this.setState({\n        todoList: this.state.todoList.concat(item)\n      }, () => {\n        // localStorageにtodoList stateを保存\n        localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList)); // callBack関数が引数に渡されていた場合に実行\n\n        callBack && callBack();\n      });\n    };\n  }\n\n  // データ保存\n  handleAdd(e) {\n    e.preventDefault(); // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\n\n    this.state.todo.push({\n      title: e.target.title.value,\n      description: e.target.description.value\n    }); // setStateを使ってstateを上書き\n\n    this.setState({\n      todo: this.state.todo\n    }); // inputのvalueを空に\n\n    e.target.title.value = '';\n    e.target.description.value = '';\n  } // データ削除\n\n\n  handleRemove(i) {\n    // todo配列からi番目から1つ目のデータを除外\n    this.state.todo.splice(i, 1); // setStateでtodo配列を上書き\n\n    this.setState({\n      todo: this.state.todo\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"siimple-box siimple--bg-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"siimple-box-title siimple--color-white\",\n        children: \"TO DO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleAdd: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"siimple-rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todos: this.state.todo,\n        handleRemove: this.handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/chocolababy/Desktop/react-todo/src/components/App.js"],"names":["React","Component","Form","List","App","state","todoList","JSON","parse","localStorage","getItem","addTodo","item","callBack","setState","concat","setItem","stringify","handleAdd","e","preventDefault","todo","push","title","target","value","description","handleRemove","i","splice","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACNC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,KAAgD;AADpD,KADiC;;AAAA,SAMzCC,OANyC,GAM/B,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC5B;AACA,WAAKC,QAAL,CACE;AACER,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,MAApB,CAA2BH,IAA3B;AADZ,OADF,EAIE,MAAM;AACJ;AACAH,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAe,KAAKZ,KAAL,CAAWC,QAA1B,CAAjC,EAFI,CAGJ;;AACAO,QAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,OATH;AAWD,KAnBwC;AAAA;;AAqBzC;AACAK,EAAAA,SAAS,CAACC,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF,GADW,CAEX;;AACA,SAAKf,KAAL,CAAWgB,IAAX,CAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEJ,CAAC,CAACK,MAAF,CAASD,KAAT,CAAeE,KAAxB;AAA+BC,MAAAA,WAAW,EAAEP,CAAC,CAACK,MAAF,CAASE,WAAT,CAAqBD;AAAjE,KAArB,EAHW,CAIX;;AACA,SAAKX,QAAL,CAAc;AAAEO,MAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB;AAAnB,KAAd,EALW,CAMX;;AACAF,IAAAA,CAAC,CAACK,MAAF,CAASD,KAAT,CAAeE,KAAf,GAAuB,EAAvB;AACAN,IAAAA,CAAC,CAACK,MAAF,CAASE,WAAT,CAAqBD,KAArB,GAA6B,EAA7B;AACD,GA/BwC,CAiCzC;;;AACAE,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd;AACA,SAAKvB,KAAL,CAAWgB,IAAX,CAAgBQ,MAAhB,CAAuBD,CAAvB,EAA0B,CAA1B,EAFc,CAGd;;AACA,SAAKd,QAAL,CAAc;AAAEO,MAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB;AAAnB,KAAd;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,wCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAKZ;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWgB,IAAxB;AAA8B,QAAA,YAAY,EAAE,KAAKM;AAAjD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlDwC","sourcesContent":["import React, { Component } from 'react'\nimport Form from './Form'\nimport List from './List'\n\nexport default class App extends Component {\n  state = {\n    todoList: JSON.parse(localStorage.getItem(\"todoList\")) || []\n  }\n\n  // todoList itemの追加\n  addTodo = (item, callBack) => {\n    // todoList stateに追加\n    this.setState(\n      {\n        todoList: this.state.todoList.concat(item)\n      },\n      () => {\n        // localStorageにtodoList stateを保存\n        localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList))\n        // callBack関数が引数に渡されていた場合に実行\n        callBack && callBack()\n      }\n    )\n  }\n\n  // データ保存\n  handleAdd(e) {\n    e.preventDefault()\n    // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\n    this.state.todo.push({ title: e.target.title.value, description: e.target.description.value })\n    // setStateを使ってstateを上書き\n    this.setState({ todo: this.state.todo })\n    // inputのvalueを空に\n    e.target.title.value = ''\n    e.target.description.value = ''\n  }\n\n  // データ削除\n  handleRemove(i) {\n    // todo配列からi番目から1つ目のデータを除外\n    this.state.todo.splice(i, 1)\n    // setStateでtodo配列を上書き\n    this.setState({ todo: this.state.todo })\n  }\n\n  render() {\n    return (\n      <div className=\"siimple-box siimple--bg-dark\">\n        <h1 className=\"siimple-box-title siimple--color-white\">TO DO LIST</h1>\n        <Form handleAdd={this.handleAdd} />\n        <div className=\"siimple-rule\"></div>\n        <List todos={this.state.todo} handleRemove={this.handleRemove} />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}